{"version":3,"sources":["components/Button.js","components/Div.js","canvas/utilities.js","components/CanvasToolbar.js","components/FileUpload.js","components/PrettyJson.js","containers/CanvasContainer.js","App.js","reportWebVitals.js","index.js"],"names":["StyledButton","styled","button","Button","props","onClick","clicked","children","StyledDiv","div","Div","randomIntFromInterval","min","max","Math","floor","random","CanvasToolbar","canvas","canvi","rect","fabric","Rect","height","width","stroke","strokeWidth","fill","add","setActiveObject","renderAll","addRect","textbox","Textbox","left","top","fontSize","addTextbox","triangle","Triangle","angle","line","Line","arrow","Group","addArrow","i","setCoords","getWidth","getHeight","populateCanvas","FileUpload","StyledLabel","label","htmlFor","style","display","type","id","onInput","e","reader","FileReader","file","target","files","onloadend","onUpload","result","readAsDataURL","uploadImage","PrettyJson","data","JSON","stringify","CanvasContainer","useState","setCanvas","previousCanvas","setPreviousCanvas","useEffect","console","log","newCanvas","previousCanvi","blob","Canvas","borderColor","img","setBackgroundImage","bind","addBackgroundImage","initCanvas","loadFromJSON","toJSON","clear","dispose","objects","StyledSection","section","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e60e8e53.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst StyledButton = styled.button`\n  background: transparent;\n  border-radius: 3px;\n  border: 2px solid palevioletred;\n  color: palevioletred;\n  margin: 0.5em 1em;\n  padding: 0.25em 1em;\n  cursor: pointer;\n`;\n\nfunction Button(props) {\n  return (\n    <StyledButton onClick={props.clicked}>{ props.children }</StyledButton>\n  );\n}\n\nexport default Button;","import styled from 'styled-components'\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nfunction Div(props) {\n  return (\n    <StyledDiv>{ props.children }</StyledDiv>\n  );\n}\n\nexport default Div;\n","import { fabric } from 'fabric';\n\nconst addRect = canvi => {\n    const rect = new fabric.Rect({\n        height: 280,\n        width: 200,\n        stroke: 'palevioletred',\n        strokeWidth: 3,\n        fill: 'rgba(0,0,0,0)'\n    });\n    canvi.add(rect).setActiveObject(rect);;\n    canvi.renderAll();\n}\n\nconst addBackgroundImage = (canvi, blob) => {\n    const img = blob ? blob : \"http://fabricjs.com/lib/pug.jpg\";\n    // Define \n\n    canvi.setBackgroundImage(img, canvi.renderAll.bind(canvi), {\n        // Optionally add an opacity lvl to the image\n        // backgroundImageOpacity: 0.5,\n        // should the image be resized to fit the container?\n        // backgroundImageStretch: true\n        // scaleX: 2,\n        // scaleY: 2\n\n    });\n\n}\n\nconst addImage = canvi => {\n    const src = \"http://fabricjs.com/lib/pug.jpg\";\n    fabric.util.loadImage(src, (img) => {\n        const image = new fabric.Image(img);\n        image.set({\n            left: 0,\n            top: 0,\n            selectable: false,\n        });\n\n        image.scaleToHeight(canvi.getHeight());\n        image.scaleToWidth(canvi.getWidth());\n        image.sendToBack();\n        canvi.add(image);\n        canvi.renderAll();\n    });\n}\n\nconst addTextbox = canvi => {\n    const textbox = new fabric.Textbox('Enter text here...', {\n        left: 50,\n        top: 50,\n        width: 150,\n        fontSize: 20\n    });\n    canvi.add(textbox).setActiveObject(textbox);\n    canvi.renderAll();\n}\n\nconst addArrow = canvi => {\n\n    const triangle = new fabric.Triangle({\n        width: 10, \n        height: 15, \n        fill: 'red', \n        left: 235, \n        top: 65,\n        angle: 90\n    });\n\n    const line = new fabric.Line([50, 100, 200, 100], {\n        left: 75,\n        top: 70,\n        stroke: 'red'\n    });\n\n    const arrow = new fabric.Group([line, triangle]);\n    canvi.add(arrow).setActiveObject(arrow);\n    canvi.renderAll();\n}\n\nconst exportToJson = canvi => {\n    \n}\n\n\nconst populateCanvas = canvi => {\n    \n    for(let i = 0; i < 150; i++){\n        const triangle = new fabric.Triangle({\n            width: 10, \n            height: 15, \n            fill: 'red', \n            left: 235, \n            top: 65,\n            angle: 90\n        });\n    \n        const line = new fabric.Line([50, 100, 200, 100], {\n            left: 75,\n            top: 70,\n            stroke: 'red'\n        });\n    \n        const arrow = new fabric.Group([line, triangle]);\n        arrow.setCoords(randomIntFromInterval(1, canvi.getWidth(), randomIntFromInterval(1, canvi.getHeight())));\n        canvi.add(arrow);\n\n        const textbox = new fabric.Textbox('Text text', {\n            left: randomIntFromInterval(1, canvi.getWidth()),\n            top: randomIntFromInterval(1, canvi.getHeight()),\n            width: 150,\n            fontSize: 20\n        });\n        canvi.add(textbox);\n\n        const rect = new fabric.Rect({\n            height: randomIntFromInterval(1, canvi.getWidth()),\n            width: randomIntFromInterval(1, canvi.getHeight()),\n            stroke: 'palevioletred',\n            strokeWidth: 3,\n            fill: 'rgba(0,0,0,0)',\n            left: randomIntFromInterval(1, canvi.getWidth()),\n            top: randomIntFromInterval(1, canvi.getHeight()),\n        });\n        canvi.add(rect);\n\n    }\n    canvi.renderAll();\n}\nfunction randomIntFromInterval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\nexport {\n    addArrow,\n    addTextbox,\n    addRect,\n    addBackgroundImage,\n    populateCanvas,\n    addImage,\n}","import Button from './Button'\nimport Div from './Div'\n\nimport {\n    addArrow,\n    addTextbox,\n    addRect,\n    populateCanvas,\n} from '../canvas/utilities'\n\nfunction CanvasToolbar({canvas}) {\n  return (\n    <Div>\n        <Button clicked={() => addRect(canvas)}>Rectangle</Button>\n        <Button clicked={() => addTextbox(canvas)}>Text</Button>\n        <Button clicked={() => addArrow(canvas)}>Arrow</Button>\n        <Button clicked={ () => populateCanvas(canvas) }>Populate canvas (400 elements)</Button>\n    </Div>\n  );\n}\n\nexport default CanvasToolbar;","import React from \"react\";\nimport styled from 'styled-components';\n\nconst FileUpload = (props) => {\n\n    function uploadImage(e) {\n        const reader = new FileReader();\n        const file = e.target.files[0];\n        reader.onloadend = () => (props.onUpload(reader.result));\n        reader.readAsDataURL(file);\n        \n    }\n\n    const StyledLabel = styled.label`\n        background: transparent;\n        border-radius: 3px;\n        border: 2px solid palevioletred;\n        color: palevioletred;\n        margin: 0.5em 1em;\n        padding: 0.25em 1em;\n        cursor: pointer;\n        font-size: 11px;\n    `\n\n    return (\n        <StyledLabel htmlFor=\"image-upload\">\n            Upload an image\n            <input style={{display: 'none'}} type=\"file\" id=\"image-upload\" onInput={(e) => uploadImage(e)} />\n        </StyledLabel>\n    );\n};\nexport default FileUpload;","import React from \"react\";\nimport styled from 'styled-components';\n\nconst PrettyJson = ({data}) => (\n    <div><pre>{JSON.stringify(data, null, 2) }</pre></div>\n);\nexport default PrettyJson;","import React, { useState, useEffect } from 'react';\nimport { fabric } from 'fabric';\nimport CanvasToolbar from '../components/CanvasToolbar'\nimport Button from '../components/Button'\nimport Div from '../components/Div'\nimport FileUpload from '../components/FileUpload'\nimport PrettyJson from '../components/PrettyJson'\nimport {\n    addBackgroundImage,\n} from '../canvas/utilities'\n\nfunction CanvasContainer() {\n    const [canvas, setCanvas] = useState(''); \n    const [previousCanvas, setPreviousCanvas] = useState(''); \n    \n\n    useEffect(() => {\n        console.log('rendered CanvasContainer');\n    }, [canvas]);\n      \n    const initCanvas = (blob) => {\n        const canvi = new fabric.Canvas('canvas', {\n            height: 800,\n            width: 1200,\n            borderColor: 'red'\n        })\n\n        if(blob){\n            addBackgroundImage(canvi, blob);\n        }\n\n        return canvi;\n    };\n\n    const newCanvas = (previousCanvi, blob) => {\n        const newCanvas = initCanvas(blob);\n\n        if(previousCanvi){\n            newCanvas.loadFromJSON(previousCanvas);\n        }\n\n        setCanvas(newCanvas);\n        setPreviousCanvas('');\n    }\n\n    /**\n     * export the canvas to JSON\n     */\n    const handleExport = canvi => {\n        console.log(canvi.toJSON());\n        setPreviousCanvas(canvi.toJSON());\n\n        canvi.clear();\n        canvi.dispose();\n        setCanvas('');\n    }\n\n\n    return (\n        <div>\n            <Div>\n                {\n                    canvas ?\n                    <Button clicked={ () => handleExport(canvas) }>Export</Button> :\n                    <>\n                        <FileUpload onUpload={(blob) => newCanvas(null, blob)} />\n                        { previousCanvas && <Button clicked={ () => newCanvas(previousCanvas) }>New canvas from previous canvas</Button> }\n                    </>\n                }\n            </Div>\n            <canvas id=\"canvas\" />\n            { canvas && <CanvasToolbar canvas={canvas} />}\n            { previousCanvas && <PrettyJson data={previousCanvas.objects}/> }\n        </div>\n    );\n}\n\nexport default CanvasContainer;","import CanvasContainer from './containers/CanvasContainer'\nimport styled from 'styled-components'\nimport './App.css';\n\nconst StyledSection = styled.section`\n  display: flex;\n  justify-content: center;\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StyledSection>\n        <CanvasContainer />\n      </StyledSection>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}